MAKEFLAGS+=--warn-undefined-variables
CC=@CC@
CXX=@CXX@
CFLAGS=@CFLAGS@
CPPFLAGS=@CPPFLAGS@ -I@srcdir@/api
CXXFLAGS=@CXXFLAGS@
LDFLAGS=@LDFLAGS@
LIBEXT=.so
ifndef OS
ifeq (@OUT_TARGET@, craftos)
ifeq ($(shell uname), Linux)
EXTRA_PLATFORM_INSTALL_TARGETS=install-linux fixup-liblua-path
endif
endif
endif
ifndef OS
ifeq (@OUT_TARGET@, craftos)
ifeq ($(shell uname), Darwin)
LIBEXT=.dylib
EXTRA_PLATFORM_INSTALL_TARGETS=install-darwin
endif
endif
endif
LIBS=craftos2-lua/src/liblua$(LIBEXT) @LIBS@
ifndef OS
ifeq (@OUT_TARGET@, craftos)
ifeq ($(shell uname), Darwin)
LIBS+= -framework ApplicationServices
LIBEXT=.dylib
endif
endif
endif
INSTALL_TARGETS?=install-bin install-liblua $(EXTRA_PLATFORM_INSTALL_TARGETS)
PREFIX?=@prefix@
prefix=$(PREFIX)
exec_prefix=@exec_prefix@
ifdef DESTDIR
$(if $(findstring /bin,$(DESTDIR)), \
	$(warning "The DESTDIR variable was significantly changed. Please set BINDIR if you would like to change where binaries will be installed."))
endif
BINDIR=@bindir@
SHAREDIR=@datarootdir@
INCLUDEDIR=@includedir@
LIBDIR=@libdir@
MACAPPDIR=$(DESTDIR)/$(PREFIX)/Applications
LIBLUA_NAME=libcraftos2-liblua
ifneq (/usr,$(PREFIX))
CPPFLAGS:=$(CPPFLAGS) -DCUSTOM_ROM_DIR=\"$(SHAREDIR)/craftos\"
endif
SDIR=@srcdir@/src
IDIR=@srcdir@/api
ODIR=obj
_OBJ=Computer.o configuration.o favicon.o font.o gif.o main.o plugin.o runtime.o speaker_sounds.o termsupport.o util.o \
	 apis_config.o apis_fs.o apis_fs_handle.o @HTTP_TARGET@ apis_mounter.o apis_os.o apis_periphemu.o apis_peripheral.o apis_redstone.o apis_term.o \
	 peripheral_monitor.o peripheral_printer.o peripheral_computer.o peripheral_modem.o peripheral_drive.o peripheral_debugger.o \
	 peripheral_debug_adapter.o peripheral_speaker.o peripheral_chest.o peripheral_energy.o peripheral_tank.o \
	 terminal_SDLTerminal.o terminal_CLITerminal.o terminal_RawTerminal.o terminal_TRoRTerminal.o terminal_HardwareSDLTerminal.o @OBJS@
OBJ = $(patsubst %,$(ODIR)/%,$(_OBJ))

all: $(ODIR) @OUT_TARGET@

craftos2-lua:
	git submodule update --init --recursive

craftos2-lua/src/liblua$(LIBEXT): craftos2-lua
	$(error Please build Lua for your platform inside the craftos2-lua directory. You can do this with `make -C craftos2-lua <platform>`, where <platform> is a platform listed with `make -C craftos2-lua`, usually linux or macosx.)

@OUT_TARGET@: craftos2-lua/src/liblua$(LIBEXT) $(OBJ) $(ODIR)/platform.o
	echo " [LD]    $@"
	$(CXX) $(LDFLAGS) -o $@ $^ $(LIBS)

macapp: craftos2-lua/src/liblua$(LIBEXT) $(OBJ) $(ODIR)/platform_macapp.o
	mkdir -p CraftOS-PC.app/Contents/MacOS
	mkdir -p CraftOS-PC.app/Contents/Resources
	echo " [LD]    CraftOS-PC.app/Contents/MacOS/craftos"
	clang++ $(LDFLAGS) -o CraftOS-PC.app/Contents/MacOS/craftos $^ $(LIBS) -F/Library/Frameworks -framework Foundation -framework AppKit -mmacosx-version-min=10.9.5
	install_name_tool -add_rpath @executable_path/../Frameworks CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/libharu/lib/libhpdf-2.3.0.dylib "@rpath/libhpdf-2.3.0.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/libpng/lib/libpng16.16.dylib "@rpath/libpng16.16.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/poco/lib/libPocoNetSSL.71.dylib "@rpath/libPocoNetSSL.71.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/poco/lib/libPocoCrypto.71.dylib "@rpath/libPocoCrypto.71.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/poco/lib/libPocoFoundation.71.dylib "@rpath/libPocoFoundation.71.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/poco/lib/libPocoJSON.71.dylib "@rpath/libPocoJSON.71.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/poco/lib/libPocoNet.71.dylib "@rpath/libPocoNet.71.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/poco/lib/libPocoUtil.71.dylib "@rpath/libPocoUtil.71.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/poco/lib/libPocoXML.71.dylib "@rpath/libPocoXML.71.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/lib/libSDL2_mixer-2.0.0.dylib "@rpath/libSDL2_mixer-2.0.0.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/sdl2/lib/libSDL2-2.0.0.dylib "@rpath/libSDL2-2.0.0.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/flac/lib/libFLAC.8.dylib "@rpath/libFLAC.8.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/mpg123/lib/libmpg123.0.dylib "@rpath/libmpg123.0.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/openssl@1.1/lib/libcrypto.1.1.dylib "@rpath/libcrypto.1.1.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	install_name_tool -change /usr/local/opt/openssl@1.1/lib/libssl.1.1.dylib "@rpath/libssl.1.1.dylib" CraftOS-PC.app/Contents/MacOS/craftos
	cp resources/Info.plist CraftOS-PC.app/Contents/
ifneq (,$(wildcard codesign/Makefile))
	make -C codesign
endif

$(ODIR):
	mkdir $@

$(ODIR)/main.o: $(SDIR)/main.cpp $(IDIR)/Computer.hpp $(IDIR)/lib.hpp $(SDIR)/util.hpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/platform_macapp.o: $(SDIR)/platform/macapp.mm $(SDIR)/platform.hpp
	echo " [OBJC]  $@"
	clang++ -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/platform.o: $(SDIR)/platform.cpp $(SDIR)/platform.hpp $(SDIR)/platform/linux.cpp $(SDIR)/platform/darwin.cpp $(SDIR)/platform/emscripten.cpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/http_emscripten.o: $(SDIR)/http_emscripten.cpp $(IDIR)/Computer.hpp $(IDIR)/lib.hpp $(SDIR)/util.hpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/%.o: $(SDIR)/%.c
	echo " [CC]    $@"
	$(CC) -o $@ -c $(CPPFLAGS) $(CFLAGS) $<

$(ODIR)/%.o: $(SDIR)/%.cpp $(IDIR)/Computer.hpp $(IDIR)/lib.hpp $(SDIR)/util.hpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/peripheral_%.o: $(SDIR)/peripheral/%.cpp $(SDIR)/peripheral/%.hpp $(IDIR)/peripheral.hpp $(IDIR)/Computer.hpp $(IDIR)/lib.hpp $(SDIR)/util.hpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/peripheral_computer.o: $(SDIR)/peripheral/computer_p.cpp $(SDIR)/peripheral/computer.hpp $(IDIR)/peripheral.hpp $(IDIR)/Computer.hpp $(IDIR)/lib.hpp $(SDIR)/util.hpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/speaker_sounds.o: $(SDIR)/peripheral/speaker_sounds.cpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/terminal_%.o: $(SDIR)/terminal/%.cpp $(SDIR)/terminal/%.hpp $(IDIR)/Terminal.hpp $(IDIR)/Computer.hpp $(IDIR)/lib.hpp $(SDIR)/util.hpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/apis_%.o: $(SDIR)/apis/%.cpp $(IDIR)/Computer.hpp $(IDIR)/lib.hpp $(SDIR)/util.hpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

$(ODIR)/apis_%_handle.o: $(SDIR)/apis/handles/%_handle.cpp $(SDIR)/apis/handles/%_handle.hpp $(IDIR)/Computer.hpp $(IDIR)/lib.hpp $(SDIR)/util.hpp
	echo " [CXX]   $@"
	$(CXX) -o $@ -c $(CPPFLAGS) $(CXXFLAGS) $(CFLAGS) $<

mac-plugin:
	echo " [LD]    ccemux.bundle"
	$(CXX) -std=c++17 -bundle -fpic -o ccemux.bundle examples/ccemux.cpp craftos2-lua/src/liblua$(LIBEXT) -lSDL2 -Icraftos2-lua/include -Iapi

linux-plugin:
	echo " [LD]    ccemux.so"
	$(CXX) -std=c++17 -shared -fPIC -o ccemux.so examples/ccemux.cpp craftos2-lua/src/liblua$(LIBEXT) -lSDL2 -Icraftos2-lua/include -Iapi

clean: $(ODIR)
	rm -f craftos
	find obj -type f -not -name speaker_sounds.o -exec rm -f {} \;

rebuild: clean craftos

fixup-liblua-path: craftos $(filter linux-plugin,$(MAKECMDGOALS))
	echo " [FIXUP] craftos"
	patchelf --replace-needed craftos2-lua/src/liblua.so "$(LIBLUA_NAME)$(LIBEXT)" craftos
	if [ -f ccemux$(LIBEXT) ]; then \
		echo " [FIXUP] ccemux$(LIBEXT)"; \
		patchelf --replace-needed "craftos2-lua/src/liblua$(LIBEXT)" "$(LIBLUA_NAME)$(LIBEXT)" "ccemux$(LIBEXT)"; \
	fi

install-darwin: macapp
	cp -r CraftOS-PC.app $(DESTDIR)$(MACAPPDIR)

install-linux:
	echo " [MKDIR] $(DESTDIR)$(SHAREDIR)/applications"
	mkdir -p "$(DESTDIR)$(SHAREDIR)/applications"
	echo " [CP]    resources/CraftOS-PC.desktop"
	cp resources/CraftOS-PC.desktop "$(DESTDIR)$(SHAREDIR)/applications"
	
	for dimension in 16 24 32 48 64 96 128 256 1024; do \
	 	icondir="$(DESTDIR)$(SHAREDIR)/icons/hicolor/$${dimension}x$${dimension}/apps"; \
		echo " [MKDIR] $${icondir}"; \
		mkdir -p "$${icondir}"; \
		echo " [CP]    resources/linux-icons/$${dimension}.png"; \
		cp "resources/linux-icons/$${dimension}.png" "$${icondir}/craftos.png"; \
	done


install-bin: craftos $(filter fixup-liblua-path,$(MAKECMDGOALS))
	echo " [MKDIR] $(DESTDIR)$(BINDIR)"
	mkdir -p "$(DESTDIR)$(BINDIR)"
	echo " [CP]    craftos"
	cp craftos "$(DESTDIR)$(BINDIR)/craftos"


# craftos2-lua does have a ``make install`` rule, but it installs a lot of
# files that conflict with a standard Lua installation.
install-liblua: craftos2-lua/src/liblua$(LIBEXT)
	echo " [MKDIR] $(DESTDIR)$(LIBDIR)"
	mkdir "$(DESTDIR)$(LIBDIR)"
	echo " [CP]    craftos2-lua/src/liblua$(LIBEXT)"
	cp craftos2-lua/src/liblua$(LIBEXT) $(DESTDIR)$(LIBDIR)/$(LIBLUA_NAME)$(LIBEXT)

install: $(INSTALL_TARGETS)

# Not installed by default, since some distributions (e.g. Fedora/RHEL) expect
# headers to be packaged seperately.
extra-install-headers:
	echo " [MKDIR] $(DESTDIR)$(INCLUDEDIR)"
	mkdir -p "$(DESTDIR)$(INCLUDEDIR)"
	echo " [CP]    api"
	cp -R api "$(DESTDIR)$(INCLUDEDIR)/CraftOS-PC"
	echo " [CP]    craftos2-lua/include"
	cp -R craftos2-lua/include/* "$(DESTDIR)$(INCLUDEDIR)/CraftOS-PC"

# Not installed by default, since this is not always wanted.
extra-install-linux-plugin: linux-plugin fixup-liblua-path
	echo " [MKDIR] $(DESTDIR)$(SHAREDIR)/craftos/plugins"
	mkdir -p "$(DESTDIR)$(SHAREDIR)/craftos/plugins"
	echo " [CP]    ccemux$(LIBEXT)"
	cp "ccemux$(LIBEXT)" "$(DESTDIR)$(SHAREDIR)/craftos/plugins"

# Not installed by default, since this is not always wanted.
extra-install-apport:
	echo " [MKDIR] $(DESTDIR)$(SHAREDIR)/apport/package-hooks"
	mkdir -p "$(DESTDIR)$(SHAREDIR)/apport/package-hooks"
	echo " [CP]    resources/apport/apport_hook.py"
	cp resources/apport/apport_hook.py $(DESTDIR)$(SHAREDIR)/apport/package-hooks/craftos-pc.py
	cp resources/apport/apport_hook.py $(DESTDIR)$(SHAREDIR)/apport/package-hooks/source_craftos-pc.py
	echo " [MKDIR] $(DESTDIR)$(SYSCONFDIR)/apport/crashdb.conf.d"
	mkdir -p "$(DESTDIR)$(SYSCONFDIR)/apport/crashdb.conf.d"
	echo " [CP]    resources/apport/apport_crashdb.conf"
	cp resources/apport/apport_crashdb.conf $(DESTDIR)$(SYSCONFDIR)/apport/crashdb.conf.d/craftos_pc-crashdb.conf

# Not installed by default, since this is not always wanted.
extra-install-appstream:
	echo " [MKDIR] $(DESTDIR)$(SHAREDIR)/metainfo"
	mkdir -p "$(DESTDIR)$(SHAREDIR)/metainfo"
	echo " [CP]    resources/appdata.xml"
	cp resources/appdata.xml $(DESTDIR)$(SHAREDIR)/metainfo/cc.craftos-pc.CraftOS-PC.appdata.xml
	echo " [MKDIR] $(DESTDIR)$(SHAREDIR)/applications"
	mkdir -p "$(DESTDIR)$(SHAREDIR)/applications"
	# XXX: Should we be installing the .desktop file into the AppStream-friendly location by default?
	echo " [CP]    resources/CraftOS-PC.desktop"
	cp resources/CraftOS-PC.desktop "$(DESTDIR)$(SHAREDIR)/applications/cc.craftos-pc.CraftOS-PC.desktop"

uninstall:
	echo " [RM]    $(DESTDIR)$(BINDIR)/craftos"
	rm -f "$(DESTDIR)$(BINDIR)/craftos"
	echo " [RM]    $(DESTDIR)$(SHAREDIR)/applications/CraftOS-PC.desktop"
	rm -f "$(DESTDIR)$(SHAREDIR)/applications/CraftOS-PC.desktop"
	echo ' [RM]    $(DESTDIR)$(SHAREDIR)/icons/hicolor/*/apps/craftos.png'
	rm -f "$(DESTDIR)$(SHAREDIR)/icons/hicolor/*/apps/craftos.png"
	echo ' [RM]    $(DESTDIR)$(LIBDIR)/$(LIBLUA_NAME)$(LIBEXT)'
	rm -f "$(DESTDIR)$(LIBDIR)/$(LIBLUA_NAME)$(LIBEXT)"
	echo ' [RM]    $(DESTDIR)$(INCLUDEDIR)/CraftOS-PC'
	rm -rf "$(DESTDIR)$(INCLUDEDIR)/CraftOS-PC"
	echo ' [RM]    $(DESTDIR)$(MACAPPDIR)/CraftOS-PC.app'
	rm -rf "$(DESTDIR)$(MACAPPDIR)/CraftOS-PC.app"
	echo ' [RM]    $(DESTDIR)$(SYSCONFDIR)/apport/crashdb.conf.d/craftos_pc-crashdb.conf'
	rm -f "$(DESTDIR)$(SYSCONFDIR)/apport/crashdb.conf.d/craftos_pc-crashdb.conf"
	echo ' [RM]    $(DESTDIR)$(SHAREDIR)/apport/package-hooks/source_craftos-pc.py'
	rm -f "$(DESTDIR)$(SHAREDIR)/apport/package-hooks/source_craftos-pc.py"
	echo ' [RM]    $(DESTDIR)$(SHAREDIR)/apport/package-hooks/craftos-pc.py'
	rm -f "$(DESTDIR)$(SHAREDIR)/apport/package-hooks/craftos-pc.py"

test: craftos
	./craftos --headless --script $(shell pwd)/resources/CraftOSTest.lua -d "$(shell mktemp -d)"

.PHONY: all macapp clean rebuild install install-bin install-headers install-liblua install-linux install-darwin extra-install-linux-plugin extra-install-apport extra-install-appstream uninstall test
.SILENT:
